<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.OrganizationMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.domain.Organization" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="zipcode" property="zipcode" jdbcType="INTEGER" />
    <result column="emali" property="emali" jdbcType="VARCHAR" />
    <result column="website" property="website" jdbcType="VARCHAR" />
    <result column="charge" property="charge" jdbcType="VARCHAR" />
    <result column="charge_phone" property="chargePhone" jdbcType="INTEGER" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="contacts_phone" property="contactsPhone" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="orgdegree" property="orgdegree" jdbcType="INTEGER" />
    <result column="route" property="route" jdbcType="VARCHAR" />
    <result column="p_id" property="pId" jdbcType="VARCHAR" />
    <result column="sortno" property="sortno" jdbcType="INTEGER" />
    <result column="update_name" property="updateName" jdbcType="VARCHAR" />
    <result column="update_id" property="updateId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="stutas" property="stutas" jdbcType="VARCHAR" />
    <result column="org_type_id" property="orgTypeId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, name, address, zipcode, emali, website, charge, charge_phone, contacts, 
    contacts_phone, remarks, orgdegree, route, p_id, sortno, update_name, update_id, 
    update_time, stutas, org_type_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.domain.OrganizationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from organization
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from organization
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from organization
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.domain.OrganizationExample" >
    delete from organization
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.Organization" useGeneratedKeys="true" keyProperty="id" >
    insert into organization (id,code, name, address,
      zipcode, emali, website, 
      charge, charge_phone, contacts, 
      contacts_phone, remarks, orgdegree, 
      route, p_id, sortno, 
      update_name, update_id, update_time, 
      stutas, org_type_id)
    values (#{id,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
      #{zipcode,jdbcType=INTEGER}, #{emali,jdbcType=VARCHAR}, #{website,jdbcType=VARCHAR}, 
      #{charge,jdbcType=VARCHAR}, #{chargePhone,jdbcType=INTEGER}, #{contacts,jdbcType=VARCHAR}, 
      #{contactsPhone,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{orgdegree,jdbcType=INTEGER}, 
      #{route,jdbcType=VARCHAR}, #{pId,jdbcType=VARCHAR}, #{sortno,jdbcType=INTEGER}, 
      #{updateName,jdbcType=VARCHAR}, #{updateId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{stutas,jdbcType=VARCHAR}, #{orgTypeId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.Organization" useGeneratedKeys="true" keyProperty="id" >
    insert into organization
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id
      <if test="code != null" >
        'code',
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="zipcode != null" >
        zipcode,
      </if>
      <if test="emali != null" >
        emali,
      </if>
      <if test="website != null" >
        website,
      </if>
      <if test="charge != null" >
        charge,
      </if>
      <if test="chargePhone != null" >
        charge_phone,
      </if>
      <if test="contacts != null" >
        contacts,
      </if>
      <if test="contactsPhone != null" >
        contacts_phone,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="orgdegree != null" >
        orgdegree,
      </if>
      <if test="route != null" >
        route,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
      <if test="sortno != null" >
        sortno,
      </if>
      <if test="updateName != null" >
        update_name,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="stutas != null" >
        stutas,
      </if>
      <if test="orgTypeId != null" >
        org_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{id,jdbcType=VARCHAR},
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null" >
        #{zipcode,jdbcType=INTEGER},
      </if>
      <if test="emali != null" >
        #{emali,jdbcType=VARCHAR},
      </if>
      <if test="website != null" >
        #{website,jdbcType=VARCHAR},
      </if>
      <if test="charge != null" >
        #{charge,jdbcType=VARCHAR},
      </if>
      <if test="chargePhone != null" >
        #{chargePhone,jdbcType=INTEGER},
      </if>
      <if test="contacts != null" >
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="contactsPhone != null" >
        #{contactsPhone,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="orgdegree != null" >
        #{orgdegree,jdbcType=INTEGER},
      </if>
      <if test="route != null" >
        #{route,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=VARCHAR},
      </if>
      <if test="sortno != null" >
        #{sortno,jdbcType=INTEGER},
      </if>
      <if test="updateName != null" >
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stutas != null" >
        #{stutas,jdbcType=VARCHAR},
      </if>
      <if test="orgTypeId != null" >
        #{orgTypeId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.domain.OrganizationExample" resultType="java.lang.Integer" >
    select count(*) from organization
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update organization
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null" >
        zipcode = #{record.zipcode,jdbcType=INTEGER},
      </if>
      <if test="record.emali != null" >
        emali = #{record.emali,jdbcType=VARCHAR},
      </if>
      <if test="record.website != null" >
        website = #{record.website,jdbcType=VARCHAR},
      </if>
      <if test="record.charge != null" >
        charge = #{record.charge,jdbcType=VARCHAR},
      </if>
      <if test="record.chargePhone != null" >
        charge_phone = #{record.chargePhone,jdbcType=INTEGER},
      </if>
      <if test="record.contacts != null" >
        contacts = #{record.contacts,jdbcType=VARCHAR},
      </if>
      <if test="record.contactsPhone != null" >
        contacts_phone = #{record.contactsPhone,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.orgdegree != null" >
        orgdegree = #{record.orgdegree,jdbcType=INTEGER},
      </if>
      <if test="record.route != null" >
        route = #{record.route,jdbcType=VARCHAR},
      </if>
      <if test="record.pId != null" >
        p_id = #{record.pId,jdbcType=VARCHAR},
      </if>
      <if test="record.sortno != null" >
        sortno = #{record.sortno,jdbcType=INTEGER},
      </if>
      <if test="record.updateName != null" >
        update_name = #{record.updateName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateId != null" >
        update_id = #{record.updateId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stutas != null" >
        stutas = #{record.stutas,jdbcType=VARCHAR},
      </if>
      <if test="record.orgTypeId != null" >
        org_type_id = #{record.orgTypeId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update organization
    set id = #{record.id,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      zipcode = #{record.zipcode,jdbcType=INTEGER},
      emali = #{record.emali,jdbcType=VARCHAR},
      website = #{record.website,jdbcType=VARCHAR},
      charge = #{record.charge,jdbcType=VARCHAR},
      charge_phone = #{record.chargePhone,jdbcType=INTEGER},
      contacts = #{record.contacts,jdbcType=VARCHAR},
      contacts_phone = #{record.contactsPhone,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      orgdegree = #{record.orgdegree,jdbcType=INTEGER},
      route = #{record.route,jdbcType=VARCHAR},
      p_id = #{record.pId,jdbcType=VARCHAR},
      sortno = #{record.sortno,jdbcType=INTEGER},
      update_name = #{record.updateName,jdbcType=VARCHAR},
      update_id = #{record.updateId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      stutas = #{record.stutas,jdbcType=VARCHAR},
      org_type_id = #{record.orgTypeId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.Organization" >
    update organization
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null" >
        zipcode = #{zipcode,jdbcType=INTEGER},
      </if>
      <if test="emali != null" >
        emali = #{emali,jdbcType=VARCHAR},
      </if>
      <if test="website != null" >
        website = #{website,jdbcType=VARCHAR},
      </if>
      <if test="charge != null" >
        charge = #{charge,jdbcType=VARCHAR},
      </if>
      <if test="chargePhone != null" >
        charge_phone = #{chargePhone,jdbcType=INTEGER},
      </if>
      <if test="contacts != null" >
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="contactsPhone != null" >
        contacts_phone = #{contactsPhone,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="orgdegree != null" >
        orgdegree = #{orgdegree,jdbcType=INTEGER},
      </if>
      <if test="route != null" >
        route = #{route,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        p_id = #{pId,jdbcType=VARCHAR},
      </if>
      <if test="sortno != null" >
        sortno = #{sortno,jdbcType=INTEGER},
      </if>
      <if test="updateName != null" >
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stutas != null" >
        stutas = #{stutas,jdbcType=VARCHAR},
      </if>
      <if test="orgTypeId != null" >
        org_type_id = #{orgTypeId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.Organization" >
    update organization
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      zipcode = #{zipcode,jdbcType=INTEGER},
      emali = #{emali,jdbcType=VARCHAR},
      website = #{website,jdbcType=VARCHAR},
      charge = #{charge,jdbcType=VARCHAR},
      charge_phone = #{chargePhone,jdbcType=INTEGER},
      contacts = #{contacts,jdbcType=VARCHAR},
      contacts_phone = #{contactsPhone,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      orgdegree = #{orgdegree,jdbcType=INTEGER},
      route = #{route,jdbcType=VARCHAR},
      p_id = #{pId,jdbcType=VARCHAR},
      sortno = #{sortno,jdbcType=INTEGER},
      update_name = #{updateName,jdbcType=VARCHAR},
      update_id = #{updateId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      stutas = #{stutas,jdbcType=VARCHAR},
      org_type_id = #{orgTypeId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>