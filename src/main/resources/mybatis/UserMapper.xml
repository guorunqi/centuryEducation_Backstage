<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.domain.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="password_error_number" jdbcType="INTEGER" property="passwordErrorNumber" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="political_outlook" jdbcType="VARCHAR" property="politicalOutlook" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="identification_number" jdbcType="VARCHAR" property="identificationNumber" />
    <result column="identification_type" jdbcType="VARCHAR" property="identificationType" />
    <result column="birth_date" jdbcType="DATE" property="birthDate" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="picture_path" jdbcType="VARCHAR" property="picturePath" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="update_id" jdbcType="CHAR" property="updateId" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="public_login_code" jdbcType="VARCHAR" property="publicLoginCode" />
    <result column="is_public" jdbcType="BIT" property="isPublic" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, login_name, password, name, role_id, status, last_login_time, password_error_number, 
    phone, email, education, political_outlook, address, identification_number, identification_type, 
    birth_date, sex, picture_path, remarks, update_id, update_name, update_time, public_login_code, 
    is_public
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.domain.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.example.demo.domain.User" useGeneratedKeys="true">
    insert into user (id,code, login_name, password,
      name, role_id, status, 
      last_login_time, password_error_number, phone, 
      email, education, political_outlook, 
      address, identification_number, identification_type, 
      birth_date, sex, picture_path, 
      remarks, update_id, update_name, 
      update_time, public_login_code, is_public
      )
    values (#{id,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{passwordErrorNumber,jdbcType=INTEGER}, #{phone,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{politicalOutlook,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{identificationNumber,jdbcType=VARCHAR}, #{identificationType,jdbcType=VARCHAR}, 
      #{birthDate,jdbcType=DATE}, #{sex,jdbcType=VARCHAR}, #{picturePath,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{updateId,jdbcType=CHAR}, #{updateName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{publicLoginCode,jdbcType=VARCHAR}, #{isPublic,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.example.demo.domain.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="passwordErrorNumber != null">
        password_error_number,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="politicalOutlook != null">
        political_outlook,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="identificationNumber != null">
        identification_number,
      </if>
      <if test="identificationType != null">
        identification_type,
      </if>
      <if test="birthDate != null">
        birth_date,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="picturePath != null">
        picture_path,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="updateName != null">
        update_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="publicLoginCode != null">
        public_login_code,
      </if>
      <if test="isPublic != null">
        is_public,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordErrorNumber != null">
        #{passwordErrorNumber,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="politicalOutlook != null">
        #{politicalOutlook,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="identificationNumber != null">
        #{identificationNumber,jdbcType=VARCHAR},
      </if>
      <if test="identificationType != null">
        #{identificationType,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        #{birthDate,jdbcType=DATE},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="picturePath != null">
        #{picturePath,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=CHAR},
      </if>
      <if test="updateName != null">
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publicLoginCode != null">
        #{publicLoginCode,jdbcType=VARCHAR},
      </if>
      <if test="isPublic != null">
        #{isPublic,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.domain.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passwordErrorNumber != null">
        password_error_number = #{record.passwordErrorNumber,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.politicalOutlook != null">
        political_outlook = #{record.politicalOutlook,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.identificationNumber != null">
        identification_number = #{record.identificationNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.identificationType != null">
        identification_type = #{record.identificationType,jdbcType=VARCHAR},
      </if>
      <if test="record.birthDate != null">
        birth_date = #{record.birthDate,jdbcType=DATE},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.picturePath != null">
        picture_path = #{record.picturePath,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=CHAR},
      </if>
      <if test="record.updateName != null">
        update_name = #{record.updateName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.publicLoginCode != null">
        public_login_code = #{record.publicLoginCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isPublic != null">
        is_public = #{record.isPublic,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      password_error_number = #{record.passwordErrorNumber,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      political_outlook = #{record.politicalOutlook,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      identification_number = #{record.identificationNumber,jdbcType=VARCHAR},
      identification_type = #{record.identificationType,jdbcType=VARCHAR},
      birth_date = #{record.birthDate,jdbcType=DATE},
      sex = #{record.sex,jdbcType=VARCHAR},
      picture_path = #{record.picturePath,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      update_id = #{record.updateId,jdbcType=CHAR},
      update_name = #{record.updateName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      public_login_code = #{record.publicLoginCode,jdbcType=VARCHAR},
      is_public = #{record.isPublic,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.User">
    update user
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordErrorNumber != null">
        password_error_number = #{passwordErrorNumber,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="politicalOutlook != null">
        political_outlook = #{politicalOutlook,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="identificationNumber != null">
        identification_number = #{identificationNumber,jdbcType=VARCHAR},
      </if>
      <if test="identificationType != null">
        identification_type = #{identificationType,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        birth_date = #{birthDate,jdbcType=DATE},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="picturePath != null">
        picture_path = #{picturePath,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=CHAR},
      </if>
      <if test="updateName != null">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publicLoginCode != null">
        public_login_code = #{publicLoginCode,jdbcType=VARCHAR},
      </if>
      <if test="isPublic != null">
        is_public = #{isPublic,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.User">
    update user
    set code = #{code,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      password_error_number = #{passwordErrorNumber,jdbcType=INTEGER},
      phone = #{phone,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      political_outlook = #{politicalOutlook,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      identification_number = #{identificationNumber,jdbcType=VARCHAR},
      identification_type = #{identificationType,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=DATE},
      sex = #{sex,jdbcType=VARCHAR},
      picture_path = #{picturePath,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      update_id = #{updateId,jdbcType=CHAR},
      update_name = #{updateName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      public_login_code = #{publicLoginCode,jdbcType=VARCHAR},
      is_public = #{isPublic,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="queryUserByOrgID" parameterType="java.lang.String" resultMap="BaseResultMap">
    select u.*
    from org_user ou,user u
    where ou.user_id=u.id and ou.org_id=#{id,jdbcType=VARCHAR}
  </select>

</mapper>