<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.QuotaMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.domain.Quota" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="assessment_id" property="assessmentId" jdbcType="VARCHAR" />
    <result column="p_id" property="pId" jdbcType="VARCHAR" />
    <result column="hierarchy" property="hierarchy" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="sortno" property="sortno" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="REAL" />
    <result column="full" property="full" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, assessment_id, p_id, hierarchy, code, sortno, name, content, weight, full, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.domain.QuotaExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from quota
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from quota
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from quota
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.domain.QuotaExample" >
    delete from quota
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.Quota" useGeneratedKeys="true" keyProperty="id" >
    insert into quota (id,assessment_id, p_id, hierarchy,
      code, sortno, name, 
      content, weight, full, 
      status)
    values (#{id,jdbcType=VARCHAR}, #{assessmentId,jdbcType=VARCHAR}, #{pId,jdbcType=VARCHAR}, #{hierarchy,jdbcType=VARCHAR},
      #{code,jdbcType=VARCHAR}, #{sortno,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{weight,jdbcType=REAL}, #{full,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.Quota" useGeneratedKeys="true" keyProperty="id" >
    insert into quota
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="assessmentId != null" >
        assessment_id,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
      <if test="hierarchy != null" >
        hierarchy,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="sortno != null" >
        sortno,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="full != null" >
        full,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="assessmentId != null" >
        #{assessmentId,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=VARCHAR},
      </if>
      <if test="hierarchy != null" >
        #{hierarchy,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="sortno != null" >
        #{sortno,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=REAL},
      </if>
      <if test="full != null" >
        #{full,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.domain.QuotaExample" resultType="java.lang.Integer" >
    select count(*) from quota
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update quota
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.assessmentId != null" >
        assessment_id = #{record.assessmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.pId != null" >
        p_id = #{record.pId,jdbcType=VARCHAR},
      </if>
      <if test="record.hierarchy != null" >
        hierarchy = #{record.hierarchy,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.sortno != null" >
        sortno = #{record.sortno,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=REAL},
      </if>
      <if test="record.full != null" >
        full = #{record.full,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update quota
    set id = #{record.id,jdbcType=VARCHAR},
      assessment_id = #{record.assessmentId,jdbcType=VARCHAR},
      p_id = #{record.pId,jdbcType=VARCHAR},
      hierarchy = #{record.hierarchy,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      sortno = #{record.sortno,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=REAL},
      full = #{record.full,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.Quota" >
    update quota
    <set >
      <if test="assessmentId != null" >
        assessment_id = #{assessmentId,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        p_id = #{pId,jdbcType=VARCHAR},
      </if>
      <if test="hierarchy != null" >
        hierarchy = #{hierarchy,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="sortno != null" >
        sortno = #{sortno,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=REAL},
      </if>
      <if test="full != null" >
        full = #{full,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.Quota" >
    update quota
    set assessment_id = #{assessmentId,jdbcType=VARCHAR},
      p_id = #{pId,jdbcType=VARCHAR},
      hierarchy = #{hierarchy,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      sortno = #{sortno,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=REAL},
      full = #{full,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryQuotaExpertByProjectId" resultType="java.util.HashMap" parameterType="java.lang.String" >
    select
    qpde.*,
    pd.policy_name wjmc,
    pde.name tmmc
    FROM
    quota_policy_document_entry qpde
    LEFT JOIN policy_document_entry pde ON qpde.policy_document_entry_id=pde.id
    LEFT JOIN policy_document pd ON pde.policy_document_id=pd.id
    where qpde.quota_id=#{id,jdbcType=VARCHAR}
  </select>
</mapper>