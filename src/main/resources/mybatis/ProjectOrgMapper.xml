<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.ProjectOrgMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.domain.ProjectOrg" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="pro_id" property="proId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, org_id, pro_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.domain.ProjectOrgExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from project_org
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from project_org
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from project_org
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.domain.ProjectOrgExample" >
    delete from project_org
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.ProjectOrg" useGeneratedKeys="true" keyProperty="id" >
    insert into project_org (id,org_id, pro_id)
    values (#{id,jdbcType=VARCHAR},#{orgId,jdbcType=VARCHAR}, #{proId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.ProjectOrg" useGeneratedKeys="true" keyProperty="id" >
    insert into project_org
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="proId != null" >
        pro_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="proId != null" >
        #{proId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.domain.ProjectOrgExample" resultType="java.lang.Integer" >
    select count(*) from project_org
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update project_org
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null" >
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.proId != null" >
        pro_id = #{record.proId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update project_org
    set id = #{record.id,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      pro_id = #{record.proId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.ProjectOrg" >
    update project_org
    <set >
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="proId != null" >
        pro_id = #{proId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.ProjectOrg" >
    update project_org
    set org_id = #{orgId,jdbcType=VARCHAR},
      pro_id = #{proId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryProjectOrgByProjectID" resultType="java.util.HashMap" parameterType="java.lang.String">
    SELECT po.*,o.name
    FROM project_org po
    LEFT JOIN organization o on po.org_id=o.id
    WHERE po.pro_id=#{projectID,jdbcType=VARCHAR}
  </select>
  <select id="queryProjectOrgByProjectIDAndQuotaID" resultType="java.util.HashMap" parameterType="java.lang.String">
    select
             a1.projectOrg projectOrgId,
			 a2.id id,
			 a1.orgId orgId,
			 a1.orgName orgName,
			 a2.userId userId,
			 a2.userName userName
    FROM
    (select p.id id,
                    p.org_id orgId,
                    o.name orgName,
                    p.id projectOrg
    from project_org p
    LEFT JOIN organization o on p.org_id=o.id
    where p.pro_id=#{projectID,jdbcType=VARCHAR}) a1
    LEFT JOIN
    (select qr.id id,
                 qr.expert_id userId,
                 u.name userName,
                 qr.project_org_id poId
    from quota_result qr
    LEFT JOIN user u on qr.expert_id=u.id
    where qr.quota_id=#{quotaID,jdbcType=VARCHAR}) a2
    ON a1.id=a2.poId
  </select>
</mapper>